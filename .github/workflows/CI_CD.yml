name: Java CI with Gradle

on:
  push:
    branches: [ "main","develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
              ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Cleanup Gradle Cache
      if: ${{ always() }}
      run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          
    - name: Docker build & push
      run: |
         docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
         docker build -f Dockerfile -t ${{ secrets.DOCKER_HUB_REPO }} .
         docker tag ${{ secrets.DOCKER_HUB_REPO }} ${{ secrets.DOCKER_HUB_REPO }}:1.0
         docker push ${{ secrets.DOCKER_HUB_REPO }}:1.0
           
    - name: Discord notification
      env:
       DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
       args: '🏃‍♂️🏃‍♂️ 서버 배포가 진행중입니다!!! 잠시 뒤에 다시 서버가 시작 됩니다.'
       
    - name: prod SSH Remote Commands
      uses: appleboy/ssh-action@v0.1.4
      id: deploy
      with:
        host: ${{ secrets.NCP_SERVER_HOST }}          
        username: ${{ secrets.NCP_USERNAME }}
        password: ${{ secrets.NCP_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        timeout: 40s  # 30초 기본        
        script: |
          docker stop mungtage
          docker rm mungtage
          docker rmi ${{ secrets.DOCKER_HUB_REPO }}:1.0
          docker pull ${{ secrets.DOCKER_HUB_REPO }}:1.0
          docker run --name=mungtage -p 8080:8080 -e JAVA_OPTS=-Djasypt.encryptor.password=${{ secrets.ENCRYTOR_PASSWORD }} --restart unless-stopped -e TZ=Asia/Seoul -d ${{ secrets.DOCKER_HUB_REPO }}:1.0

    - name: Send status to Discord
      if: always()
      uses: nebularg/actions-discord-webhook@v1
      with:
         webhook_url: ${{ secrets.DISCORD_WEBHOOK }
         status: ${{ job.status }}

    - name: Discord notification
      if: success()
      env:
       DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
       args: '🙆‍♂️ 서버 배포가 되었습니다!!'
